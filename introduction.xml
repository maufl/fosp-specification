<!-- vim: set spelllang=en_us spell sw=3 st=3 ts=3 noexpandtab: -->
<section anchor="purpose" title="Purpose">
	<t>The Federated Object Storage Protocol (FOSP) is an application-level protocol
		for exchanging structured and unstructured data generated by users of different providers.
		It is designed to fullfill the needs of online social networks by combining necessary features into one simple protocol.
	</t>
	<t>FOSP aims to provide three core features:
		<list style="numbers">
			<t>Store data online and support standart operations on it.</t>
			<t>Enforce access control on the data, for useres from different hosts, without central authentication.</t>
			<t>Notify users when data is added, removed or has changed.</t>
		</list>
	</t>
	<t>Furthermore, some non-functional requirements are imposed.
		The protocol needs to be data agnostic and should support structured, unstructured and metadata.
		It also must be as simple as possible, e.g. it must be easy to implement and it should be possible to write easy to deploy applications for it.
	</t>
</section>
<section anchor="conventions" title="Conventions">
	<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
		"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
		document are to be interpreted as described in <xref target="refs.rfc2119">RFC 2119</xref>.
	</t>
</section>
<section anchor="requirements" title="Requirements">
	<t>FOSP builds on existing protocols and data formats.
		The transport protocol for FOSP messages currently is the WebSocket protocol, tough other options may be added in the future.
		Objects are serialized into the JavaScript Object Notation (JSON).
		Besides these technical dependencies, FOSP is inspired by WebDAV and XMPP and has similarities to LDAP.
	</t>
</section>
<section anchor="terminology" title="Terminology">
	<t>This document uses a number of terminologies to refer to concepts found in FOSP.
		<list style="hanging">
			<t hangText="provider">An entity that provides storage space on the Internet for the data of users.
				It is identified by a DNS domain name.
			</t>
			<t hangText="server">A FOSP server stores the data of users of a certain provider.
				Multiple servers can be deployed to deliver the data of a provider to implement fault tolerance and load balancing.
			</t>
			<t hangText="client">A FOSP client is a program a user uses to communicate with a FOSP server.
				It facilitates accessing the data of the user that is stored on the server.
			</t>
			<t hangText="message">A message is the basic unit of communication in FOSP.
				Messages come in three different flavours.
			</t>
			<t hangText="request">A request is a message sent from a client to a server.
				It is used to retrieve or alter data.
			</t>
			<t hangText="response">A response is a message sent from a server to a client.
				It is always sent as an answer to a request and contains the status of the request and possibly data.
			</t>
			<t hangText="notification">A notification is a message that is sent by servers when changes happen to an object.
			</t>
		</list>
	</t>
</section>
